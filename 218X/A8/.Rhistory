addPolygons(
data = match[1, ],
color = "red",
label = ~PUMA
) %>%
addPolygons(
data = match[-1, ],
label = ~PUMA
)
# seeing how similar..
match_pumas <-
match %>%
filter(!PUMA %in% c("08504")) %>%
st_drop_geometry() %>%
select(-match) %>%
pivot_longer(      # pivot longer makes 'tidier'
-PUMA,
names_to = "year",
values_to = "bart"
) %>%
group_by(
year
) %>%
summarize(
bart = mean(bart),
PUMA = "Similar PUMAs"
)
View(match_pumas)
treatment_pumas <-    # just taking first row of data
match %>%
filter(PUMA %in% c("08504")) %>%
select(-match) %>%
st_drop_geometry() %>%
pivot_longer(
-PUMA,
names_to = "year",
values_to = "bart"
)
View(treatment_pumas)
rbind(      # by fields, different orders don't matter
treatment_pumas,
match_pumas
) %>%
ggplot(
aes(
x = as.numeric(year),   # don't want as factor here
y = bart,
color = PUMA
)
) +
geom_line() +
geom_vline(xintercept = 2017, linetype = "dashed") + # to put vertical line, just check units
labs(
title = "Milpitas vs. control neighborhoods, BART ridership",
x = "Year",
y = "BART commute riders"
)
# then make Diff in Diff regression
# time is just 0's and 1's
transit_did <-
match %>%
st_drop_geometry() %>%
select(-match) %>%
pivot_longer(
-PUMA,
names_to = "year",
values_to = "bart"
) %>%
mutate(
year = year %>% as.numeric(),
time = ifelse(year >= 2017, 1, 0),
treated = ifelse(PUMA == "08504", 1, 0)
)
View(transit_did)
did_reg <- lm(bart ~ treated*time, data = transit_did)
summary(did_reg)
# Clear all variables, close all plots, and clear the console, load libraries
rm(list=ls())   # clears variables
graphics.off()   # clears plots
cat("\014")   # clears console
setwd("~/GitHub/swehen17.github.io/218X/A8")
setwd("~/GitHub/swehen17.github.io/218X/A8")
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
bay_county_names <-
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
bay_counties <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
bay_pumas <-
ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
mapview(bay_pumas)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = bay_pumas,
weight = 1,
color = "gray",
label = ~PUMACE10
) %>%
addMarkers(
lng = -121.78025199689912,   # finding lat long on google maps
lat = 37.99593068104423       # that's the BART station
) %>%
addPolygons(
data = bay_pumas %>%
filter(PUMACE10 == "01309")
)
View(bay_pumas)
# this line shortens a much longer to load chunk from textbook
pums_2014_2019 <- readRDS("pums_2014_2019_wts.rds")
# this line shortens a much longer to load chunk from textbook
pums_2014_2019 <- readRDS("pums_2014_2019_wts.rds")
pums_bart <- pums_2014_2019 %>%
mutate(
PWGTP = as.numeric(PWGTP),
bart = ifelse(
JWTR %in% c("4"),
PWGTP,
0
)
) %>%
group_by(PUMA, year) %>%
summarize(
pop = sum(PWGTP),
bart = sum(bart)
)
View(pums_bart)
55*6
# Population first
pums_pal <- colorNumeric(
palette = "YlOrRd",
domain = pums_bart %>%
filter(year == 2017) %>%
pull(pop)
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = pums_bart %>%
filter(year == 2017) %>%
right_join(bay_pumas %>% select(PUMA = PUMACE10)) %>%
st_as_sf(),
fillColor = ~pums_pal(pop),
color = "white",
weight = 1,
fillOpacity = 0.5,
label = ~paste0(PUMA,": Population ", pop)
)
#
# Now BART Ridership
#
pums_pal <- colorNumeric(
palette = "GnBu",
domain = pums_bart %>%
filter(year == 2017) %>%
pull(bart)
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = pums_bart %>%
filter(year == 2017) %>%
right_join(bay_pumas %>% select(PUMA = PUMACE10)) %>%
st_as_sf(),
fillColor = ~pums_pal(bart),
color = "white",
weight = 1,
fillOpacity = 0.5,
label = ~paste0(PUMA,": ", bart, " BART commute riders")
)
384/120000
# pivot to wide format
pums_bart_clean <-
pums_bart %>%
select(-pop) %>%
pivot_wider(       # pivot wider key function here, for easier math comparison
names_from = year,
values_from = bart
)
# Population first
pums_pal <- colorNumeric(
palette = "YlOrRd",
domain = pums_bart %>%
filter(year == 2017) %>%
pull(pop)
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = pums_bart %>%
filter(year == 2017) %>%
right_join(bay_pumas %>% select(PUMA = PUMACE10)) %>%
st_as_sf(),
fillColor = ~pums_pal(pop),
color = "white",
weight = 1,
fillOpacity = 0.5,
label = ~paste0(PUMA,": Population ", pop)
)
#
# Now BART Ridership
#
pums_pal <- colorNumeric(
palette = "GnBu",
domain = pums_bart %>%
filter(year == 2017) %>%
pull(bart)
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = pums_bart %>%
filter(year == 2017) %>%
right_join(bay_pumas %>% select(PUMA = PUMACE10)) %>%
st_as_sf(),
fillColor = ~pums_pal(bart),
color = "white",
weight = 1,
fillOpacity = 0.5,
label = ~paste0(PUMA,": ", bart, " BART commute riders")
)
# stuff from Ch 6.1
obs_matrix <-
pums_bart_clean %>%
ungroup() %>%
select(`2014`,`2015`,`2016`) %>%   # backticks ` allow you to refer to specially named column name (also applies to names with spaces)
# for assignment, we just add 2017 to list
as.matrix()
View(obs_matrix)
View(pums_bart_clean)
# stuff from Ch 6.1
obs_matrix <-
pums_bart_clean %>%
ungroup() %>%
select(`2014`,`2015`,`2016`, `2017`) %>%   # add 2017
as.matrix()
View(obs_matrix)
dist_matrix <- mahalanobis.dist(obs_matrix)
View(dist_matrix)
rownames(dist_matrix) <- pums_bart_clean$PUMA
colnames(dist_matrix) <- pums_bart_clean$PUMA
# find 10 most similar PUMAs to treatment PUMA (Ch 6.1 techniques)
# matching according to *absolute* BART ridership values
match <- dist_matrix["01309",] %>%
as.data.frame() %>%
rownames_to_column() %>%
rename(
PUMA = rowname,
match = "."
) %>%
right_join(
pums_bart_clean
) %>%
arrange(match) %>%
.[1:11, ] %>%
left_join(bay_pumas %>% select(PUMA = PUMACE10)) %>%
st_as_sf()
View(match)
# top 10 most similar pumas to given one (Oakley/Brentwood, adjacent to Antioch), based on three years
# map above
leaflet() %>%
addTiles() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = match[1, ],
color = "red",
label = ~PUMA
) %>%
addPolygons(
data = match[-1, ],
label = ~PUMA
)
View(match)
# seeing how similar..
match_pumas <-
match %>%
filter(!PUMA %in% c("01309")) %>%
st_drop_geometry() %>%
select(-match) %>%
pivot_longer(      # pivot longer makes 'tidier'
-PUMA,
names_to = "year",
values_to = "bart"
) %>%
group_by(
year
) %>%
summarize(
bart = mean(bart),
PUMA = "Similar PUMAs"
)
View(match_pumas)
treatment_pumas <-    # just taking first row of data
match %>%
filter(PUMA %in% c("01309")) %>%
select(-match) %>%
st_drop_geometry() %>%
pivot_longer(
-PUMA,
names_to = "year",
values_to = "bart"
)
View(treatment_pumas)
rbind(      # by fields, different orders don't matter
treatment_pumas,
match_pumas
) %>%
ggplot(
aes(
x = as.numeric(year),   # don't want as factor here
y = bart,
color = PUMA
)
) +
geom_line() +
geom_vline(xintercept = 2018, linetype = "dashed") + # to put vertical line, just check units
labs(
title = "Oakley/Brentwood vs. control neighborhoods, BART ridership",
x = "Year",
y = "BART commute riders"
)
# then make Diff in Diff regression
# time is just 0's and 1's
transit_did <-
match %>%
st_drop_geometry() %>%
select(-match) %>%
pivot_longer(
-PUMA,
names_to = "year",
values_to = "bart"
) %>%
mutate(
year = year %>% as.numeric(),
time = ifelse(year >= 2017, 1, 0),
treated = ifelse(PUMA == "08504", 1, 0)
)
# then make Diff in Diff regression
# time is just 0's and 1's
transit_did <-
match %>%
st_drop_geometry() %>%
select(-match) %>%
pivot_longer(
-PUMA,
names_to = "year",
values_to = "bart"
) %>%
mutate(
year = year %>% as.numeric(),
time = ifelse(year >= 2017, 1, 0),
treated = ifelse(PUMA == "01309", 1, 0)
)
View(transit_did)
# then make Diff in Diff regression
# time is just 0's and 1's
transit_did <-
match %>%
st_drop_geometry() %>%
select(-match) %>%
pivot_longer(
-PUMA,
names_to = "year",
values_to = "bart"
) %>%
mutate(
year = year %>% as.numeric(),
time = ifelse(year >= 2018, 1, 0),
treated = ifelse(PUMA == "01309", 1, 0)
)
View(transit_did)
did_reg <- lm(bart ~ treated * time, data = transit_did)
summary(did_reg)
rbind(      # by fields, different orders don't matter
treatment_pumas,
match_pumas
) %>%
ggplot(
aes(
x = as.numeric(year),   # don't want as factor here
y = bart,
color = PUMA
)
) +
geom_line() +
geom_vline(xintercept = 2018, linetype = "dashed") + # to put vertical line, just check units
labs(
title = "Oakley/Brentwood vs. control neighborhoods, BART ridership",
x = "Year",
y = "BART commute riders"
)
# top 10 most similar pumas to given one (Oakley/Brentwood, adjacent to Antioch), based on three years
# map above
leaflet() %>%
addTiles() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = match[1, ],
color = "red",
label = ~PUMA
) %>%
addPolygons(
data = match[-1, ],
label = ~PUMA
)
# seeing how similar..
match_pumas <-
match %>%
filter(!PUMA %in% c("01309")) %>%
st_drop_geometry() %>%
select(-match) %>%
pivot_longer(      # pivot longer makes 'tidier'
-PUMA,
names_to = "year",
values_to = "bart"
) %>%
group_by(
year
) %>%
summarize(
bart = mean(bart),
PUMA = "Similar PUMAs"
)
treatment_pumas <-    # just taking first row of data
match %>%
filter(PUMA %in% c("01309")) %>%
select(-match) %>%
st_drop_geometry() %>%
pivot_longer(
-PUMA,
names_to = "year",
values_to = "bart"
)
rbind(      # by fields, different orders don't matter
treatment_pumas,
match_pumas
) %>%
ggplot(
aes(
x = as.numeric(year),   # don't want as factor here
y = bart,
color = PUMA
)
) +
geom_line() +
geom_vline(xintercept = 2018, linetype = "dashed") + # to put vertical line, just check units
labs(
title = "Oakley/Brentwood vs. control neighborhoods, BART ridership",
x = "Year",
y = "BART commute riders"
)
View(pums_bart_clean)
# stuff from Ch 6.1
obs_matrix <-
pums_bart_clean %>%
ungroup() %>%
select(`2014`,`2015`,`2016`, `2017`) %>%   # add 2017
as.matrix()
View(obs_matrix)
# then make Diff in Diff regression
# time is just 0's and 1's
transit_did <-
match %>%
st_drop_geometry() %>%
select(-match) %>%
pivot_longer(
-PUMA,
names_to = "year",
values_to = "bart"
) %>%
mutate(
year = year %>% as.numeric(),
time = ifelse(year >= 2018, 1, 0),
treated = ifelse(PUMA == "01309", 1, 0)
)
did_reg <- lm(bart ~ treated * time, data = transit_did)
summary(did_reg)
# then make Diff in Diff regression
# time is just 0's and 1's
transit_did <-
match %>%
st_drop_geometry() %>%
select(-match) %>%
pivot_longer(
-PUMA,
names_to = "year",
values_to = "bart"
) %>%
mutate(
year = year %>% as.numeric(),
time = ifelse(year >= 2018, 1, 0),
treated = ifelse(PUMA == "01309", 1, 0)
)
did_reg <- lm(bart ~ treated * time, data = transit_did)
summary(did_reg)
