group_by(PUMA) %>%
summarise(
expensiveelec_old_nofridge =
sum(expensiveelec_old_nofridge, na.rm = T)/sum(WGTP, na.rm = T)*100
) %>%
left_join(
bay_pumas %>%
select(PUMACE10),
by = c("PUMA" = "PUMACE10")
) %>%
st_as_sf()
pums_pal = colorNumeric(
palette = "Reds",
domain = bay_pums_heat_suscep$expensiveelec_old_nofridge
)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_pums_heat_suscep,
fillColor = ~pums_pal(expensiveelec_old_nofridge),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(expensiveelec_old_nofridge),
"% non-English-speaking renter households making less than $100K"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = bay_pums_heat_suscep,
pal = pums_pal,
values = ~expensiveelec_old_nofridge,
title = "% Elderly (older than 65) people with<br>NO HHLigerator and<br>Expensive Electricity"
)
View(bay_pums_heat_suscep)
bay_pums_heat_suscep =
bay_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(
WGTP = as.numeric(WGTP),
old_esl_eleccost = ifelse(
(AGEP >= 65) &
(HHL != 1) &
(ELEP > 100),
WGTP,
0
)
) %>%
group_by(PUMA) %>%
summarise(
old_esl_eleccost =
sum(old_esl_eleccost, na.rm = T)/sum(WGTP, na.rm = T)*100
) %>%
left_join(
bay_pumas %>%
select(PUMACE10),
by = c("PUMA" = "PUMACE10")
) %>%
st_as_sf()
View(bay_pums_heat_suscep)
leaflet() %>%
addTiles() %>%
addPolygons(
data = bay_pums_heat_suscep,
fillColor = ~pums_pal(old_esl_eleccost),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(old_esl_eleccost),
"% Elderly, non-English speaking residents with Costly Electricity"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = bay_pums_heat_suscep,
pal = pums_pal,
values = ~old_esl_eleccost,
title = "% Elderly (older than 65) people with<br>English as Second Language and<br>Expensive Electricity"
)
# find total population of people with these traits in Bay Area
sum(bay_pums_heat_suscep$old_esl_eleccost)
# look up ACS data at data.census.gov
# generally default to ACS data
# find table code
bay_income_white_2019 = getCensus(
name = "acs/acs5",
vintage = "2019",
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = "group(B19001A)"
) %>%
select(ends_with("E") & -c(state, NAME
))
library(tidyverse)
library(censusapi)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
# look up ACS data at data.census.gov
# generally default to ACS data
# find table code
bay_income_white_2019 = getCensus(
name = "acs/acs5",
vintage = "2019",
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = "group(B19001A)"
) %>%
select(ends_with("E") & -c(state, NAME
))
# look up ACS data at data.census.gov
# generally default to ACS data
# find table code
bay_income_white_2019 = getCensus(
name = "acs/acs5",
vintage = "2019",
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = "group(B19001A)"
) %>%
select(ends_with("E") & -c(state, NAME
)) %>%
summarise_all(sum)
View(bay_income_white_2019)
# look up ACS data at data.census.gov
# generally default to ACS data
# find table code
bay_income_white_2019 = getCensus(
name = "acs/acs5",
vintage = "2019",
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = "group(B19001A)"
) %>%
select(ends_with("E") & -c(state, NAME
)) %>%
summarise_all(sum) %>%
pivot_longer(
everything(),
names_to = "name",
values_to = "estimate"
)
View(bay_income_white_2019)
# look up ACS data at data.census.gov
# generally default to ACS data
# find table code
bay_income_white_2019 = getCensus(
name = "acs/acs5",
vintage = "2019",
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = "group(B19001A)"
) %>%
select(ends_with("E") & -c(state, NAME
)) %>%
summarise_all(sum) %>%
pivot_longer(
everything(),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = ""
)
acs_vars_2019_5yr <-
listCensusMetadata(
name = "2019/acs/acs5",
type = "variables"
)
# look up ACS data at data.census.gov
# generally default to ACS data
# find table code
bay_income_white_2019 = getCensus(
name = "acs/acs5",
vintage = "2019",
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = "group(B19001A)"
) %>%
select(ends_with("E") & -c(state, NAME
)) %>%
summarise_all(sum) %>%
pivot_longer(
everything(),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = ""
)
View(acs_vars_2019_5yr)
# look up ACS data at data.census.gov
# generally default to ACS data
# find table code
bay_income_white_2019 = getCensus(
name = "acs/acs5",
vintage = "2019",
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = "group(B19001A)"
) %>%
select(ends_with("E") & -c(state, NAME
)) %>%
summarise_all(sum) %>%
pivot_longer(
everything(),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = ""
)
# look up ACS data at data.census.gov
# generally default to ACS data
# find table code
bay_income_white_2019 = getCensus(
name = "acs/acs5",
vintage = "2019",
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = "group(B19001A)"
) %>%
select(ends_with("E") & -c(state, NAME
)) %>%
summarise_all(sum) %>%
pivot_longer(
everything(),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
)
View(bay_income_white_2019)
# look up ACS data at data.census.gov
# generally default to ACS data
# find table code
bay_income_white_2019 = getCensus(
name = "acs/acs5",
vintage = "2019",
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = "group(B19001A)"
) %>%
select(ends_with("E") & -c(state, NAME
)) %>%
summarise_all(sum) %>%
pivot_longer(
everything(),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
separate(
label,
into = c(NA, NA, "income"),
sep = "!!"
) %>%
select(-name)
View(bay_income_white_2019)
bay_income_white_2019[1,1]
bay_income_white_2019[2:17,1]
sum(bay_income_white_2019[2:17,1])
# look up ACS data at data.census.gov
# generally default to ACS data
# find table code
bay_income_white_2019 = getCensus(
name = "acs/acs5",
vintage = "2019",
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = "group(B19001A)"
) %>%
select(ends_with("E") & -c(state, NAME
)) %>%
summarise_all(sum) %>%
pivot_longer(
everything(),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
separate(
label,
into = c(NA, NA, "income"),
sep = "!!"
) %>%
select(-name) %>%
filter(!is.na(income))
View(bay_income_white_2019)
# look up ACS data at data.census.gov
# generally default to ACS data
# find table code
bay_income_white_2019 = getCensus(
name = "acs/acs5",
vintage = "2019",
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = "group(B19001A)"
) %>%
select(ends_with("E") & -c(state, NAME
)) %>%
summarise_all(sum) %>%
pivot_longer(
everything(),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
separate(
label,
into = c(NA, NA, "income"),
sep = "!!"
) %>%
select(-name) %>%
filter(is.na(income))
# look up ACS data at data.census.gov
# generally default to ACS data
# find table code
bay_income_white_2019 = getCensus(
name = "acs/acs5",
vintage = "2019",
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = "group(B19001A)"
) %>%
select(ends_with("E") & -c(state, NAME
)) %>%
summarise_all(sum) %>%
pivot_longer(
everything(),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
separate(
label,
into = c(NA, NA, "income"),
sep = "!!"
) %>%
select(-name) %>%
filter(!is.na(income))
# look up ACS data at data.census.gov
# generally default to ACS data
# find table code
bay_income_white_2019 = getCensus(
name = "acs/acs5",
vintage = "2019",
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = "group(B19001A)"
) %>%
select(ends_with("E") & -c(state, NAME
)) %>%
summarise_all(sum) %>%
pivot_longer(
everything(),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
separate(
label,
into = c(NA, NA, "income"),
sep = "!!"
) %>%
select(-name) %>%
filter(!is.na(income)) %>%
mutate(
race = "White alone"
)
LETTERS
LETTERS[26]
LETTERS[1:7]
LETTERS][x]
full_dataset <- NULL
# tidyverse looping method (equivalent to above):
race_categories <- c(
"White alone",
"Black or African American alone",
"American Indian and Alaska Native alone",
"Asian alone",
"Native Hawaiian and Other Pacific Islander alone",
"Some Other Race alone",
"Two or more Races"
)
race_categories[1]
race_categories[4]
1:7 %>%
getCensus(
name = "acs/acs5",
vintage = "2019",
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = paste0("group(B19001",LETTERS[x],")"
) %>%
select(ends_with("E") & -c(state, NAME
)) %>%
summarise_all(sum) %>%
pivot_longer(
everything(),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
separate(
label,
into = c(NA, NA, "income"),
sep = "!!"
) %>%
select(-name) %>%
filter(!is.na(income)) %>%
mutate(
race = race_categories[x]
)
})
getCensus(
name = "acs/acs5",
vintage = "2019",
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = paste0("group(B19001",LETTERS[x],")")
%>%
select(ends_with("E") & -c(state, NAME
)) %>%
summarise_all(sum) %>%
pivot_longer(
everything(),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
separate(
label,
into = c(NA, NA, "income"),
sep = "!!"
) %>%
select(-name) %>%
filter(!is.na(income)) %>%
mutate(
race = race_categories[x]
))
bay_income_race_2019 <-
1:7 %>%
map_dfr(function(x){
getCensus(
name = "acs/acs5",
vintage = "2019",
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = paste0("group(B19001",LETTERS[x],")")
%>%
select(ends_with("E") & -c(state, NAME
)) %>%
summarise_all(sum) %>%
pivot_longer(
everything(),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
separate(
label,
into = c(NA, NA, "income"),
sep = "!!"
) %>%
select(-name) %>%
filter(!is.na(income)) %>%
mutate(
race = race_categories[x]
))
})
source("~/SDC/Autumn 2021/218X/week_4/census_coding_popquiz.R")
