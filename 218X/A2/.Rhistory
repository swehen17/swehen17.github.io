# ac = alameda county (where Berkeley is located)
ac_pop_2020 <-
getCensus(
name = "dec/pl",
vintage = 2020,
region = "block:*",
regionin = "state:06+county:001",
vars = "P1_001N"
) %>%
transmute(
GEOID20 =
paste0(state,county,tract,block),
pop_2020 = P1_001N
)
dec_vars_2010 <-
listCensusMetadata(
name = "2020/dec/pl",
type = "variables"
)
View(dec_vars_2020)
View(dec_vars_2010)
dec_vars_2010 <-
listCensusMetadata(
name = "2010/dec/pl",
type = "variables"
)
smc_pop_2010 <-
getCensus(
name = "dec/pl",
vintage = 2010,
region = "block:*",
regionin = "state:06+county:001",
vars = "P001001"
) # %>%
ac_pop_2010 <-
getCensus(
name = "dec/pl",
vintage = 2010,
region = "block:*",
regionin = "state:06+county:001",
vars = "P001001"
) # %>%
View(ac_pop_2010)
ac_pop_2010 <-
getCensus(
name = "dec/pl",
vintage = 2010,
region = "block:*",
regionin = "state:06+county:001",
vars = "P001001"
) %>%
transmute(
GEOID10 =
paste0(state,county,tract,block),
pop_2010 = P001001
)
blocks_2010 <- blocks("CA", "Alameda", year = 2010, progress_bar = F)
berkeley_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Berkeley")
View(berkeley_boundary)
ac_blocks_2010 <- blocks("CA", "Alameda", year = 2010, progress_bar = F)
berkeley_blocks_2010 <- ac_blocks_2010 %>%
st_centroid() %>%
.[berkeley_boundary, ] %>%
st_drop_geometry() %>%
left_join(ac_blocks_2010 %>% select(GEOID20)) %>%
st_as_sf()
View(ac_blocks_2010)
berkeley_blocks_2010 <- ac_blocks_2010 %>%
st_centroid() %>%
.[berkeley_boundary, ] %>%
st_drop_geometry() %>%
left_join(ac_blocks_2010 %>% select(GEOID10)) %>%
st_as_sf()
# %>%
# select(___) %>%
# left_join(___)
mapview(ac_blocks_2010) + mapview(berkeley_blocks_2010), alpha.regions = 0, color = "red", lwd = 2)
# %>%
# select(___) %>%
# left_join(___)
mapview(ac_blocks_2010) + mapview(berkeley_blocks_2010, alpha.regions = 0, color = "red", lwd = 2)
# %>%
# select(___) %>%
# left_join(___)
mapview(berkeley_boundary) + mapview(berkeley_blocks_2010, alpha.regions = 0, color = "red", lwd = 2)
# %>%
# select(___) %>%
# left_join(___)
mapview(berkeley_blocks_2010) + mapview(berkeley_boundary, alpha.regions = 0, color = "red", lwd = 2)
berkeley_blocks_2020 <- ac_blocks_2020 %>%
.[berkeley_boundary, ] %>%
select(GEOID20) %>%
left_join(berkeley_blocks_2010)
berkeley_blocks_2020 <- ac_blocks_2020 %>%
.[berkeley_boundary, ] %>%
select(GEOID20) %>%
left_join(berkeley_blocks_2020)
berkeley_blocks_2020 <- ac_blocks_2020 %>%
.[berkeley_boundary, ] %>%
select(GEOID20) %>%
left_join(ac_blocks_2020)
View(ac_blocks_2020)
class(ac_blocks_2020)
?st_centroid
View(ac_blocks_2010)
.[bay_counties,]
ac_blocks_2010
head(ac_blocks_2010)
names(ac_blocks_2010)
names(ac_blocks_2020)
ac_blocks_2010[berkeley_boundary,]
View(ac_blocks_2010[berkeley_boundary,])
?st_drop_geometry
View(berkeley_boundary)
berkeley_boundary("geometry")
berkeley_boundary[geometry]
berkeley_boundary['geometry']
?st_drop_geometry
st_drop_geometry(ac_blocks_2010)
test1 = st_drop_geometry(ac_blocks_2010)
View(test1)
?left_join
df1 <- data.table(x = c("a","a","a","b","b"), y = 1:5)
example(data.table)
vignette(package = 'data.table')
test2 = inner_join(temp, usa_zips)
test2 = inner_join(smc_pop_race_2020, smc_sexbyage)
?select
View(dec_vars_2020)
?st_centroid
st_centroid() %>%
.[berkeley_boundary, ] %>%
st_drop_geometry() %>%
left_join(ac_blocks_2010 %>% select(GEOID10)) %>%
st_as_sf()
st_centroid() %>%
.[berkeley_boundary, ] %>%
st_drop_geometry() %>%
left_join(ac_blocks_2010 %>% select(GEOID10)) %>%
st_as_sf() %>%
select(GEOID10) %>%
left_join(ac_pop_2010)
berkeley_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "Berkeley")
berkeley_blocks_2010 <- ac_blocks_2010 %>%
st_centroid() %>%
.[berkeley_boundary, ] %>%
st_drop_geometry() %>%
left_join(ac_blocks_2010 %>% select(GEOID10)) %>%
st_as_sf() %>%
select(GEOID10) %>%
left_join(ac_pop_2010)
mapview(berkeley_blocks_2010) + mapview(berkeley_boundary, alpha.regions = 0, color = "red", lwd = 2)
View(berkeley_blocks_2010)
berkeley_blocks_2020 <- ac_blocks_2020 %>%
.[berkeley_blocks_2010, ] %>%
select(GEOID20) %>%
left_join(ac_pop_2020)
View(berkeley_blocks_2020)
mapview(berkeley_blocks_2010) + mapview(berkeley_boundary, alpha.regions = 0, color = "red", lwd = 2)
mapview(berkeley_blocks_2020) + mapview(berkeley_boundary, alpha.regions = 0, color = "red", lwd = 2)
?st_transform
View(berkeley_blocks_2020)
View(berkeley_boundary)
berkeley_blocks_2020_intersect <- berkeley_blocks_2020 %>%
st_transform(26910) %>%
mutate(original_area = st_area(.))
View(berkeley_blocks_2020_intersect)
berkeley_blocks_2020_intersect <- berkeley_blocks_2020 %>%
st_transform(26910) %>%
mutate(original_area = st_area(.)) %>%
st_intersection(
berkeley_blocks_2010 %>%
select(GEOID10) %>%
st_transform(26910)
) %>%
mutate(
leftover_area = st_area(.)
View(berkeley_blocks_2020_intersect)
berkeley_blocks_2020_intersect <- berkeley_blocks_2020 %>%
st_transform(26910) %>%
mutate(original_area = st_area(.)) %>%
st_intersection(
berkeley_blocks_2010 %>%
select(GEOID10) %>%
st_transform(26910)
) %>%
mutate(
leftover_area = st_area(.)
berkeley_blocks_2020_intersect <- berkeley_blocks_2020 %>%
st_transform(26910) %>%
mutate(original_area = st_area(.)) %>%
st_intersection(
berkeley_blocks_2010 %>%
select(GEOID10) %>%
st_transform(26910)
) %>%
mutate(
leftover_area = st_area(.))
View(berkeley_blocks_2020_intersect)
berkeley_blocks_2020_intersect <- berkeley_blocks_2020 %>%
st_transform(26910) %>%
mutate(original_area = st_area(.)) %>%
st_intersection(
berkeley_blocks_2010 %>%
select(GEOID10) %>%
st_transform(26910)
) %>%
mutate(
leftover_area = st_area(.),
perc_area = as.numeric( leftover_area / original_area),
pop_2020 = pop_2020 * perc_area
)
View(berkeley_blocks_2020_intersect)
View(berkeley_blocks_2020_intersect)
berkeley_blocks_2020_reshaped <- berkeley_blocks_2020_intersect %>%
st_drop_geometry() %>%
group_by(GEOID10)
View(berkeley_blocks_2020_reshaped)
berkeley_blocks_2020_reshaped <- berkeley_blocks_2020_intersect %>%
st_drop_geometry() %>%
group_by(GEOID10) %>%
summarize(
pop_2020 = sum(pop_2020, na.rm=T) %>% round()
)
projection <- "+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=ft +no_defs"
View(berkeley_blocks_2010)
View(berkeley_blocks_2010)
View(berkeley_blocks_2020)
View(berkeley_blocks_2020_intersect)
View(berkeley_blocks_2010)
View(berkeley_blocks_2020_reshaped)
berkeley_pop_2010_2020 <- berkeley_blocks_2010 %>%
left_join(berkeley_blocks_2020_reshaped) %>%
mutate(
absolute_pop = (pop_2020 - pop_2010) / as.numeric(st.area(.)) * 43560
)
projection <- "+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=ft +no_defs"
berkeley_pop_2010_2020 <- berkeley_blocks_2010 %>%
left_join(berkeley_blocks_2020_reshaped) %>%
mutate(
absolute_pop = (pop_2020 - pop_2010) / as.numeric(st.area(.)) * 43560
)
library(tigris)
library(tidyverse)
library(sf)
library(mapview)
library(leaflet)
library(censusapi)
Sys.setenv(CENSUS_KEY="6f7c0626bea3c5e312eb4d33753d5dc4ce0d54f8")
projection <- "+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=ft +no_defs"
berkeley_pop_2010_2020 <- berkeley_blocks_2010 %>%
left_join(berkeley_blocks_2020_reshaped) %>%
mutate(
absolute_pop = (pop_2020 - pop_2010) / as.numeric(st.area(.)) * 43560
)
berkeley_pop_2010_2020 <- berkeley_blocks_2010 %>%
left_join(berkeley_blocks_2020_reshaped) %>%
mutate(
absolute_pop = (pop_2020 - pop_2010) / as.numeric(st_area(.)) * 43560
)
View(berkeley_pop_2010_2020)
max <- max(abs(berkeley_pop_2010_2020$absolute_pop))
absolute_pal <- colorNumeric(
palette = "PiYG",
domain = c(-max,max)
)
?leaflet
leaflet(berkeley_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~"red"("green"),
# label = ~round(___),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal(),
value = c(-max,max),
title = "Berkeley Population Changes by Block from 2010 to 2020"
)
leaflet(berkeley_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~"red"("green"),
# label = ~round(___),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "Berkeley Population Changes by Block from 2010 to 2020"
)
leaflet(berkeley_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal,
value = c(-max,max),
title = "Berkeley Population Changes by Block from 2010 to 2020"
)
# mapped again using a much smaller max value to remove outliers and show more color gradient
max2 <- 3000
absolute_pal2 <- colorNumeric(
palette = "PiYG",
domain = c(-max2,max2)
)
leaflet(berkeley_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal2,
value = c(-max2,max2),
title = "Berkeley Population Changes by Block from 2010 to 2020"
)
# mapped again using a much smaller max value to remove outliers and show more color gradient
max3 <- 1500
absolute_pal2 <- colorNumeric(
palette = "PiYG",
domain = c(-max3,max3)
)
leaflet(berkeley_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal2,
value = c(-max3,max3),
title = "Berkeley Population Changes by Block from 2010 to 2020"
)
# mapped again using a much smaller max value to remove outliers and show more color gradient
max4 <- 750
absolute_pal2 <- colorNumeric(
palette = "PiYG",
domain = c(-max4,max4)
)
leaflet(berkeley_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal2,
value = c(-max4,max4),
title = "Berkeley Population Changes by Block from 2010 to 2020"
)
leaflet(berkeley_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal2(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal2,
value = c(-max4,max4),
title = "Berkeley Population Changes by Block from 2010 to 2020"
)
absolute_pal2 <- colorNumeric(
palette = "PiYG",
domain = c(-max2,max2)
)
leaflet(berkeley_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal2(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal2,
value = c(-max2,max2),
title = "Berkeley Population Changes by Block from 2010 to 2020"
)
absolute_pal3 <- colorNumeric(
palette = "PiYG",
domain = c(-max3,max3)
)
leaflet(berkeley_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal3(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal2,
value = c(-max3,max3),
title = "Berkeley Population Changes by Block from 2010 to 2020"
)
absolute_pal4 <- colorNumeric(
palette = "PiYG",
domain = c(-max4,max4)
)
leaflet(berkeley_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal4(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal2,
value = c(-max4,max4),
title = "Berkeley Population Changes by Block from 2010 to 2020"
)
# mapped again using a much smaller max value to remove outliers and show more color gradient
max5 <- 375
absolute_pal5 <- colorNumeric(
palette = "PiYG",
domain = c(-max5,max5)
)
leaflet(berkeley_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal5(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal2,
value = c(-max5,max5),
title = "Berkeley Population Changes by Block from 2010 to 2020"
)
# mapped again using a much smaller max value to remove outliers and show more color gradient
max6 <- 188
absolute_pal6 <- colorNumeric(
palette = "PiYG",
domain = c(-max6,max6)
)
leaflet(berkeley_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal6(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal2,
value = c(-max6,max6),
title = "Berkeley Population Changes by Block from 2010 to 2020"
)
# mapped again using a much smaller max value to remove outliers and show more color gradient
max6 <- 187.5
absolute_pal6 <- colorNumeric(
palette = "PiYG",
domain = c(-max6,max6)
)
leaflet(berkeley_pop_2010_2020) %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~absolute_pal6(absolute_pop),
label = ~round(absolute_pop),
color = "white",
opacity = 0.5,
fillOpacity = 0.75,
weight = 1
) %>%
addLegend(
pal = absolute_pal2,
value = c(-max6,max6),
title = "Berkeley Population Changes by Block from 2010 to 2020"
)
