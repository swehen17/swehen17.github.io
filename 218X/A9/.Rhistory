)
) +
geom_line(
aes(
color = YEAR %>% factor()   # change?
)
) +
scale_x_discrete(
limits = c(
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
)
) +
labs(
x = "",
y = "Total kBTUs (billions)",
# title = paste0("Residential Energy Consumption in the Bay Area, ", input$year),
title = paste0("Residential Energy Consumption in the Bay Area, ", "input$year"),
color = "Year"
) +
theme(legend.position = "none")
View(chart)
chart %>%
ggplotly() %>%
config(displayModeBar = F)
chart %>%
ggplotly() %>%
config(displayModeBar = F)
yearz = c(2018, 2017)
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
# YEAR == input$year   # change?
YEAR == yearz
) %>%
ggplot(
aes(
x = MONTH,
y = TOTALKBTU/1e9
)
) +
geom_line(
aes(
color = YEAR %>% factor()   # change?
)
) +
scale_x_discrete(
limits = c(
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
)
) +
labs(
x = "",
y = "Total kBTUs (billions)",
# title = paste0("Residential Energy Consumption in the Bay Area, ", input$year),
title = paste0("Residential Energy Consumption in the Bay Area, ", "input$year"),
color = "Year"
) +
theme(legend.position = "none")
chart %>%
ggplotly() %>%
config(displayModeBar = F)
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
# YEAR == input$year   # change?
YEAR == c(2017, 2018)
) %>%
ggplot(
aes(
x = MONTH,
y = TOTALKBTU/1e9
)
) +
geom_line(
aes(
color = YEAR %>% factor()   # change?
)
) +
scale_x_discrete(
limits = c(
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
)
) +
labs(
x = "",
y = "Total kBTUs (billions)",
# title = paste0("Residential Energy Consumption in the Bay Area, ", input$year),
title = paste0("Residential Energy Consumption in the Bay Area, ", "input$year"),
color = "Year"
) +
theme(legend.position = "none")
chart %>%
ggplotly() %>%
config(displayModeBar = F)
observeEvent(input$year, {
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
# YEAR == input$year   # change?
YEAR == c(2017)
) %>%
ggplot(
aes(
x = MONTH,
y = TOTALKBTU/1e9
)
) +
geom_line(
aes(
color = YEAR %>% factor()   # change?
)
) +
scale_x_discrete(
limits = c(
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
)
) +
labs(
x = "",
y = "Total kBTUs (billions)",
# title = paste0("Residential Energy Consumption in the Bay Area, ", input$year),
title = paste0("Residential Energy Consumption in the Bay Area, ", "input$year"),
color = "Year"
) +
theme(legend.position = "none")
chart %>%
ggplotly() %>%
config(displayModeBar = F)
1
theme(legend.position = "none")'
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
# YEAR == input$year   # change?
YEAR == c(2017)
) %>%
ggplot(
aes(
x = MONTH,
y = TOTALKBTU/1e9
)
) +
geom_line(
aes(
color = YEAR %>% factor()   # change?
)
) +
scale_x_discrete(
limits = c(
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
)
) +
labs(
x = "",
y = "Total kBTUs (billions)",
# title = paste0("Residential Energy Consumption in the Bay Area, ", input$year),
title = paste0("Residential Energy Consumption in the Bay Area, ", "input$year"),
color = "Year"
) +
theme(legend.position = "none")
1
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
# YEAR == input$year   # change?
YEAR == 2017
) %>%
ggplot(
aes(
x = MONTH,
y = TOTALKBTU/1e9
)
) +
geom_line(
aes(
color = YEAR %>% factor()   # change?
)
) +
scale_x_discrete(
limits = c(
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
)
) +
labs(
x = "",
y = "Total kBTUs (billions)",
# title = paste0("Residential Energy Consumption in the Bay Area, ", input$year),
title = paste0("Residential Energy Consumption in the Bay Area, ", "input$year"),
color = "Year"
) +
theme(legend.position = "none")
chart %>%
ggplotly() %>%
config(displayModeBar = F)
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
# YEAR == input$year   # change?
YEAR == 2018
) %>%
ggplot(
aes(
x = MONTH,
y = TOTALKBTU/1e9
)
) +
geom_line(
aes(
color = YEAR %>% factor()   # change?
)
) +
scale_x_discrete(
limits = c(
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
)
) +
labs(
x = "",
y = "Total kBTUs (billions)",
# title = paste0("Residential Energy Consumption in the Bay Area, ", input$year),
title = paste0("Residential Energy Consumption in the Bay Area, ", "input$year"),
color = "Year"
) +
theme(legend.position = "none")
chart %>%
ggplotly() %>%
config(displayModeBar = F)
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
# YEAR == input$year   # change?
YEAR %in% c(2017, 2018)
) %>%
ggplot(
aes(
x = MONTH,
y = TOTALKBTU/1e9
)
) +
geom_line(
aes(
color = YEAR %>% factor()   # change?
)
) +
scale_x_discrete(
limits = c(
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
)
) +
labs(
x = "",
y = "Total kBTUs (billions)",
# title = paste0("Residential Energy Consumption in the Bay Area, ", input$year),
title = paste0("Residential Energy Consumption in the Bay Area, ", "input$year"),
color = "Year"
) +
theme(legend.position = "none")
output$plot <- renderPlotly({
chart %>%
ggplotly() %>%
config(displayModeBar = F)
View(pge_data)
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Residential"
),
# YEAR == input$year   # change?
YEAR %in% c(2017, 2018)
) %>%
ggplot(
aes(
x = MONTH,
y = TOTALKBTU/1e9
)
) +
geom_line(
aes(
color = YEAR %>% factor()   # change?
)
) +
scale_x_discrete(
limits = c(
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
)
) +
labs(
x = "",
y = "Total kBTUs (billions)",
# title = paste0("Residential Energy Consumption in the Bay Area, ", input$year),
title = paste0("Residential Energy Consumption in the Bay Area, ", "input$year"),
color = "Year"
) +
theme(legend.position = "none")
chart %>%
ggplotly() %>%
config(displayModeBar = F)
yearz
print(years)
print(yearz)
length(yearz)
as.character(yearz)
?for
?for()
for
?snippet::for
snippet
?snippet
for (i in 3) {print(i)}
for (i in 3) {print(i)}
for (i in range(3)) {print(i)}
3
x <- c(2,5,3,9,8,11,6)
count <- 0
for (val in x) {
if(val %% 2 == 0)  count = count+1
}
print(count)
for (i in 3) {print(i)}
for (in in range(3)) {print(i)}
for (val in range(3)) {print(i)}
i
for (x in range(5)) {print(x)}
range(5)
length(5)
for(i in yearz) {print(i)}
yearz = c(2017, 2018, 2019)
for(i in yearz) {print(i)}
paste0("Residential Energy Consumption in the Bay Area, ",
for (i in yearz) {
print(i)
}
paste0("Residential Energy Consumption in the Bay Area, ",
for (i in yearz) {
print(i)
}
yearz
max(yearz)
yearz = c(2020, 2017, 2018)
ytears
yearz
max(yearz)
12
yearz
output$map <- renderLeaflet({
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data = pge_res_elec,
fillColor = ~res_pal(TOTALKBTU),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(TOTALKBTU),
" kBTU total in ",
ZIPCODE
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = pge_res_elec,
pal = res_pal,
values = ~TOTALKBTU,
# title = paste0("Total Residential<br>Electricity (kBTU), ", input$year)
title = paste0("Total Residential<br>Electricity (kBTU), ", yearz)
)
toString(3)
toString(yearz)
toString(max(yearz))
?geom_line
?checkboxGroupInput
yearz
tail(yearz)
tail(yearz, n =1)
list = c(a, b, c)
list = c(1, 2, 3)
list
tail(list, n = 1)
tail(list, n = 2)
install.packages('rsconnect')
install.packages("rsconnect")
1
rsconnect::setAccountInfo(name='swehen17', token='7D1F86B09DD6392ABA4F6D657169A446', secret='PtC5A69KgectlrNFk7P/WAayyIFu5d9IL+o4Z3IU')
library(rsconnect)
rsconnect::deployApp('C:\Users\14155\Documents\GitHub\swehen17.github.io\218X\A9\HendricksonSwen_A9.Rmd')
setwd("~/GitHub/swehen17.github.io/218X/A9")
library(rsconnect)
rsconnect::deployApp('~/GitHub/swehen17.github.io/218X/A9/HendricksonSwen_A9.Rmd')
library(rsconnect)
rsconnect::deployApp('~/GitHub/swehen17.github.io/218X/A9/HendricksonSwen_A9.Rmd')
1
1
library(rsconnect)
rsconnect::deployApp('~/GitHub/swehen17.github.io/218X/A9/HendricksonSwen_A9.Rmd')
